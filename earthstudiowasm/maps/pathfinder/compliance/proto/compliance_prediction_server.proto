syntax = "proto2";

package maps_driving_compliance;

import "geostore/base/proto/featureid.proto";
import "net/proto2/contrib/js_proto/public/field_annotations.proto";

option java_multiple_files = true;
option java_package = "com.google.boq.compliance.proto";

service CompliancePredictionService {
    rpc PredictComplianceOnTrip(PredictComplianceOnTripRequest) returns (PredictComplianceOnTripResponse);
}

message PredictComplianceOnTripRequest {
    optional ComplianceOptions options = 1;
    repeated ComplianceModelInput path_input = 2;
    repeated PathSegments path_segments = 3;
}

message PredictComplianceOnTripResponse {
    repeated ComplianceModelResult path_result = 1;
}

message ComplianceOptions {
    optional string model_name = 1;
    optional double penalty_seconds_per_percent = 2;
    optional double penalty_seconds_per_kilometer_percent = 3;
    optional double penalty_seconds_per_minute_percent = 4;
}

message ComplianceModelInput {
    repeated NGramSummary summary = 1;
}

message NGramSummary {
    optional int32 ngram_size = 1;
    optional double compliance_probability = 2;
    optional int32 session_count = 3;
}

message PathSegments {
    repeated geostore.FeatureIdProto segment_id = 1;
}

message ComplianceModelResult {
    optional float log_compliance_probability = 1 [deprecated = true];
    optional float compliance_probability = 2;
    optional ComplianceModelInput model_input_for_logging = 3;
    optional bool success = 4;
}
