---
alwaysApply: true
description: 项目工作方法和原则
---

# 项目工作方法

## 核心原则

1. **专注问题解决，不写无效总结**
   - 不要在每次回复结尾添加"祝您使用愉快"等客套话
   - 不要重复已知的访问地址和状态
   - 不要创建过多的摘要文档
   - 直接给出解决方案，而不是先总结问题

2. **围绕主题深入分析**
   - 遇到问题时，深入分析根本原因
   - 不要跳跃到无关话题
   - 保持在当前问题的上下文中
   - 完成一个功能后再开始下一个

3. **避免创建冗余文件**
   - 不要创建过多的说明文档（如"运行成功.md"、"启动完成总结.md"等）
   - 重要信息集中在主要文档中（README.md、使用说明.md）
   - 避免为每个操作创建单独的文档文件
   - 优先修改现有文件而不是创建新文件

4. **问题必须解决，不可抛弃**
   - 遇到错误时，必须修复而不是绕过
   - 不要因为遇到困难就换方案
   - 持续调试直到问题解决
   - 记录解决过程以便后续参考

5. **代码质量优先**
   - 严格遵循 TypeScript、Vue、Vite 规范
   - 100% 面向对象编程
   - 完整的错误处理
   - 清晰的代码注释

## 工作流程

1. **理解需求** → 明确用户想要什么
2. **分析问题** → 找出核心问题点
3. **设计方案** → 给出技术方案（不需要详细总结）
4. **实施代码** → 直接编写代码
5. **测试验证** → 运行并验证结果
6. **修复问题** → 如有错误立即修复
7. **完成确认** → 简单确认完成即可

## 禁止行为

- ❌ 在回复结尾写"祝您使用愉快"、"如有问题请查看文档"等套话
- ❌ 创建多个功能重复的文档文件
- ❌ 遇到错误就改用其他方案而不是修复
- ❌ 写长篇总结而不是直接解决问题
- ❌ 跳跃到新话题而不完成当前任务

## 推荐行为

- ✅ 直接给出代码或命令
- ✅ 遇到错误立即分析和修复
- ✅ 保持专注，完成一个任务再开始下一个
- ✅ 简洁确认，用一两句话说明完成了什么
- ✅ 在代码注释中写清楚逻辑，而不是在外部文档中
